name: CI (client)

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  
jobs:

  health-check-job:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: "14.15.5"

      - name: build
        run: docker-compose up --build -d client
    
      - name: tests
        run: docker-compose run client quasar test --unit jest

      - name: client lint
        run: docker-compose run client yarn lint

  code_quality_with_sonar:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: sonarcloud scan
        uses: sonarsource/sonarcloud-github-action@master
        with:
          projectBaseDir: client
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  deploy:

    needs: [health-check-job, code_quality_with_sonar]
    
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: "client/"

    steps:
    - uses: actions/checkout@v2
    - name: docker login
      run: docker login -u ${{secrets.DOCKER_USER}} -p ${{secrets.DOCKER_PASSWORD}}

    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag gabrielfilipe7/gabrielfilipe7unb-trabalho-individual-2020-2:client_latest

    - name: Docker Push
      run: docker push gabrielfilipe7/gabrielfilipe7unb-trabalho-individual-2020-2:client_latest 

  deploy_to_heroku:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        
      - name: heroku
        uses: gonuit/heroku-docker-deploy@v1.3.2
        with:
          email: ${{ secrets.HEROKU_EMAIL }}
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: ${{ secrets.HEROKU_APP_NAME_CLIENT }}
          dockerfile_directory: ./client/
          dockerfile_name: Dockerfile.Prod
          docker_options: "--no-cache"
          process_type: web