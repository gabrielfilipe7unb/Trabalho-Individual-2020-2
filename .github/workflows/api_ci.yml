name: CI (api)

on:
  push:
    branches: [ master ]

  pull_request:
    branches: [ master ]

jobs:

  health-check-job:
    runs-on: ubuntu-latest

    steps:
    - name: code checkout 
      uses: actions/checkout@v2

    - name: check python version
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'

    - name: install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r ./api/requirements.txt

    - name: api build
      run: |
        docker-compose up --build -d api
      env:
        DB_HOST: db
        DB_NAME: myproject
        DB_USER: myuser
        DB_PASSWORD: password

    - name: tests
      run: docker-compose run api python manage.py test

  coverage:
    runs-on: ubuntu-latest
    
    name: coverage
    steps:
    - uses: actions/checkout@master
    - name: Setup Python
      uses: actions/setup-python@master
      with:
        python-version: 3.7
    - name: api build
      run: docker-compose up --build -d api
    - name: tests
      run: docker-compose run api coverage run manage.py test
    
    - name: Test & publish code coverage
      uses: paambaati/codeclimate-action@v2.7.5
      env:
        CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_TOKEN }}
      with:
        coverageCommand: docker-compose run api coverage xml
        debug: true

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        fail_ci_if_error: true
        verbose: true
    
  #   - name: coverage report
  #     run: |
  #       docker-compose run api coverage report
  #       docker-compose run api coverage run --source="." --omit="manage.py" manage.py test


# CODECOV_TOKEN='c6abc053-a1ba-4ab6-942e-1732b2481ff2'