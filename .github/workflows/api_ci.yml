name: CI (api)

on:
  push:
    branches: [ master ]

  pull_request:
    branches: [ master ]

jobs:

  health-check-job:

    runs-on: ubuntu-latest

    steps:
    - name: code checkout 
      uses: actions/checkout@v2

    - name: check python version
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'

    - name: install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r ./api/requirements.txt

    - name: build
      run: |
        docker-compose up --build -d api
      env:
        DB_HOST: db
        DB_NAME: myproject
        DB_USER: myuser
        DB_PASSWORD: password

    # if you want to have linter analysis, uncomment this.
    # - name: lint
    #   uses: lgeiger/pyflakes-action@master

    - name: tests
      run: docker-compose run api python manage.py test

  code_quality_with_sonar:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: sonarcloud scan
        uses: sonarsource/sonarcloud-github-action@master
        with:
          projectBaseDir: api
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  coverage_and_code_quality_with_cc_and_codev:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@master
    - name: Setup Python
      uses: actions/setup-python@master
      with:
        python-version: 3.7

    - name: api build
      run: docker-compose up --build -d api

    - name: tests
      run: docker-compose run api coverage run manage.py test

    - name: coverage report
      run: docker-compose run api coverage xml

    - name: upload coverage to codecov
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        fail_ci_if_error: true
        verbose: true
